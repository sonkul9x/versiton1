<?phpclass News_Admin extends MY_Controller{    function __construct()    {        parent::__construct();        modules::run('auth/auth/validate_login',$this->router->fetch_module());        $this->_layout = 'admin_ui/layout/main';        $this->_view_data['url'] = NEWS_ADMIN_BASE_URL;    }    /**     * @desc: Hien thi danh sach cac bai viet     *      * @param type $options      */    function browse($para1=DEFAULT_LANGUAGE, $para2=1)    {        $options            = array('lang'=>switch_language($para1),'page'=>$para2);        $options            = array_merge($options, $this->_get_data_from_filter());        $options['news_sort_type'] = $this->phpsession->get('news_sort_type');        $this->phpsession->save('news_lang', $options['lang']);        $options['is_show'] = TRUE;        $total_row          = $this->news_model->get_news_count($options);        $total_pages        = (int)($total_row / NEWS_ADMIN_POST_PER_PAGE);        if ($total_pages * NEWS_ADMIN_POST_PER_PAGE < $total_row) $total_pages++;        if ((int)$options['page'] > $total_pages) $options['page'] = $total_pages;        $options['offset']  = $options['page'] <= DEFAULT_PAGE ? DEFAULT_OFFSET : ((int)$options['page'] - 1) * NEWS_ADMIN_POST_PER_PAGE;        $options['limit']   = NEWS_ADMIN_POST_PER_PAGE;        $config = prepare_pagination(            array(                'total_rows'    => $total_row,                'per_page'      => $options['limit'],                'offset'        => $options['offset'],                'js_function'   => 'change_page_admin'            )        );        $this->pagination->initialize($config);        $options['news']                  = $this->news_model->get_news($options);        $options['categories_combobox']   = $this->news_categories_model->get_news_categories_combo(array('categories_combobox' => $options['cat_id'], 'lang' => $options['lang'], 'extra' => 'class="btn"'));        $options['sort_combobox']         = $this->news_model->get_news_sort_combobox(array('sort_combobox'=>$options['news_sort_type'], 'extra' => 'onchange="javascript:change_sort();" class="btn"'));        $options['lang_combobox']         = $this->utility_model->get_lang_combo(array('lang' => $options['lang'], 'extra' => 'onchange="javascript:change_lang();" class="btn"'));        $options['post_uri']              = 'news_admin';        $options['total_rows']            = $total_row;        $options['total_pages']           = $total_pages;        $options['page_links']            = $this->pagination->create_ajax_links();                if($options['lang'] <> DEFAULT_LANGUAGE){            $options['uri'] = NEWS_ADMIN_BASE_URL . '/' . $options['lang'];        }else{            $options['uri'] = NEWS_ADMIN_BASE_URL;        }                if(isset($options['error']) || isset($options['succeed']) || isset($options['warning']))             $options['options'] = $options;        // Chuan bi du lieu chinh de hien thi        $this->_view_data['main_content'] = $this->load->view('admin/news_list',$options, TRUE);                // Chuan bi cac the META        $this->_view_data['title'] = 'Quản lý bài viết' . DEFAULT_TITLE_SUFFIX;        // Tra lai view du lieu cho nguoi su dung        $this->load->view($this->_layout, $this->_view_data);    }        /**     * Lấy dữ liệu từ filter     * @return string     */    private function _get_data_from_filter()    {        $options = array();        if ( $this->is_postback())        {            $options['search'] = $this->db->escape_str($this->input->post('search', TRUE));            $options['cat_id'] = $this->input->post('categories_combobox');            $this->phpsession->save('news_search_options', $options);            //search with lang            $options['lang'] = $this->input->post('lang');        }        else        {            $temp_options = $this->phpsession->get('news_search_options');            if (is_array($temp_options))            {                $options['search'] = $temp_options['search'];                $options['cat_id'] = $temp_options['cat_id'];            }            else            {                $options['search'] = '';                $options['cat_id'] = DEFAULT_COMBO_VALUE;            }        }//        $options['offset'] = $this->uri->segment(3);        return $options;    }        public function do_sort_news_list()    {        if ( $this->is_postback())        {            $this->phpsession->save('news_sort_type', $this->input->post('sort_combobox'));        }        else        {            $this->phpsession->save('news_sort_type', '');        }    }    function add()    {        $options = array();                if($this->is_postback())        {            if (!$this->_do_add_news())                $options['error'] = validation_errors();            if (isset($options['error'])) $options['options']   = $options;        }        $options += $this->_get_add_news_form_data();        // Chuan bi du lieu chinh de hien thi        $this->_view_data['main_content'] = $this->load->view('admin/add_news_form', $options, TRUE);        // Chuan bi cac the META        $this->_view_data['title'] = 'Thêm bài viết' . DEFAULT_TITLE_SUFFIX;                // Tra lai view du lieu cho nguoi su dung        $this->load->view($this->_layout, $this->_view_data);    }    /**     * Chuẩn bị dữ liệu cho form add     * @return type     */    private function _get_add_news_form_data()    {        $options                  = array();        $options['title']         = my_trim($this->input->post('title'));        if(SLUG_ACTIVE>0){            $options['slug'] = $this->input->post('slug');        }        $options['summary']       = my_trim($this->input->post('summary'));        $options['thumb']         = $this->input->post('thumb');        $options['content']       = $this->input->post('content');        $options['startups']      = $this->input->post('startups');        $options['meta_title']            = my_trim($this->input->post('meta_title'));        $options['meta_keywords']         = my_trim($this->input->post('meta_keywords'));        $options['meta_description']      = my_trim($this->input->post('meta_description'));        $options['tags']                  = my_trim($this->input->post('tags'));        if($this->is_postback())        {            $created_date = datetimepicker_array2($this->input->post('created_date', TRUE));            $options['created_date'] = date('d-m-Y H:i',mktime($created_date['hour'],$created_date['minute'],$created_date['second'],$created_date['month'],$created_date['day'],$created_date['year']));            $options['lang_combobox'] = $this->utility_model->get_lang_combo(array('lang' => $this->input->post('lang', TRUE), 'extra' => 'onchange="javascript:get_categories_by_lang();" class="btn"'));            $options['categories_combobox']   = $this->news_categories_model->get_news_categories_combo(array('categories_combobox' => $this->input->post('categories_combobox')                                                                                                        , 'lang'                => $this->input->post('lang', TRUE)                                                                                                        , 'extra' => 'class="btn"'                                                                                                        ));        }        else        {            $options['created_date']  = date('d-m-Y H:i');            $options['lang_combobox'] = $this->utility_model->get_lang_combo(array('lang' => $this->phpsession->get('news_lang'), 'extra' => 'onchange="javascript:get_categories_by_lang();" class="btn"'));            $options['categories_combobox']   = $this->news_categories_model->get_news_categories_combo(array('categories_combobox' => $this->input->post('categories_combobox')                                                                                                        , 'lang'                => $this->phpsession->get('news_lang')                                                                                                        , 'extra' => ' class="btn"'                                                                                                        ));        }        $options['scripts']       = $this->_get_scripts();        $options['header']        = 'Thêm bài viết';        $options['button_name']   = 'Lưu dữ liệu';        $options['submit_uri']    = NEWS_ADMIN_BASE_URL.'/add';        return $options;    }    private function _do_add_news()    {        $this->form_validation->set_rules('title', 'Tiêu đề', 'trim|required|xss_clean|max_length[255]');        if(SLUG_ACTIVE>0){            $this->form_validation->set_rules('slug', 'Slug', 'trim|required|xss_clean|max_length[1000]');        }        $this->form_validation->set_rules('categories_combobox', 'Phân loại tin', 'is_not_default_combo');        $this->form_validation->set_rules('thumb', 'Hình minh họa', 'trim|required|xss_clean');        $this->form_validation->set_rules('summary', 'Tóm tắt', 'trim|required|xss_clean|max_length[512]');        $this->form_validation->set_rules('content', 'Nội dung', 'required');        $this->form_validation->set_rules('created_date', 'Ngày đăng tin', 'trim|required|xss_clean');//      $this->form_validation->set_rules('security_code', 'Mã an toàn', 'trim|required|xss_clean|matches_value[' . $this->phpsession->get('captcha') . ']');        if ($this->form_validation->run())        {            $post_data = $this->_get_posted_news_data();            $post_data['creator'] = $this->phpsession->get('user_id');            $position_add = $this->news_model->position_to_add_news(array('lang'=>$post_data['lang']));            $post_data['position'] = $position_add;            $insert_id = $this->news_model->insert($post_data);            if(SLUG_ACTIVE>0){                if(isset($insert_id)){                    $this->slug_model->insert_slug(array('slug'=>  my_trim($this->input->post('slug', TRUE)).SLUG_CHARACTER_URL,'type'=>SLUG_TYPE_NEWS,'type_id'=>$insert_id));                }            }            redirect(NEWS_ADMIN_BASE_URL . '/' . $post_data['lang']);        }        return FALSE;    }    private function _get_posted_news_data()    {        $content = str_replace('&lt;', '<', $this->input->post('content'));        $content = str_replace('&gt;', '>', $content);        $post_data = array(            'title'               => my_trim($this->input->post('title', TRUE)),            'summary'             => my_trim($this->input->post('summary', TRUE)),            'content'             => $content,            'thumbnail'           => cut_domain_from_url($this->input->post('thumb')),            'cat_id'              => $this->input->post('categories_combobox', TRUE),            'meta_title'          => my_trim($this->input->post('meta_title', TRUE)),            'meta_keywords'       => my_trim($this->input->post('meta_keywords', TRUE)),            'meta_description'    => my_trim($this->input->post('meta_description', TRUE)),            'tags'                => my_trim($this->input->post('tags', TRUE)),            'lang'                => $this->input->post('lang', TRUE),            'startups'            => $this->input->post('startups', TRUE),        );        if($this->phpsession->get('roles_publisher') == STATUS_ACTIVE){            $post_data['status'] = STATUS_ACTIVE;        }else{            $post_data['status'] = STATUS_INACTIVE;        }        $created_date = datetimepicker_array2($this->input->post('created_date', TRUE));        $post_data['created_date'] = date('Y-m-d H:i:s',mktime($created_date['hour'],$created_date['minute'],$created_date['second'],$created_date['month'],$created_date['day'],$created_date['year']));        $post_data['updated_date']  = date('Y-m-d H:i:s');        $post_data['editor'] = $this->phpsession->get('user_id');        return $post_data;    }    function edit()    {        $options = array();                if(!$this->is_postback()) redirect(NEWS_ADMIN_BASE_URL);        if ($this->is_postback() && !$this->input->post('from_list'))        {            if (!$this->_do_edit_news())                $options['error'] = validation_errors();            if (isset($options['error'])) $options['options']   = $options;        }        $options += $this->_get_edit_form_data();        // Chuan bi du lieu chinh de hien thi        $this->_view_data['main_content'] = $this->load->view('admin/add_news_form', $options, TRUE);        // Chuan bi cac the META        $this->_view_data['title'] = 'Sửa bài viết' . DEFAULT_TITLE_SUFFIX;                // Tra lai view du lieu cho nguoi su dung        $this->load->view($this->_layout, $this->_view_data);    }    /**     * Chuẩn bị dữ liệu cho form sửa     * @return type     */    private function _get_edit_form_data()    {        $id        = $this->input->post('id');        // khi vừa vào trang sửa        if($this->input->post('from_list'))        {            $news           = $this->news_model->get_news(array('id' => $id,'is_show'=>TRUE));            $id             = $news->id;            $title          = $news->title;            if(SLUG_ACTIVE>0){                $slug = slug_character_remove($news->slug);            }            $summary        = $news->summary;            $content        = $news->content;            $created_date   = date('d-m-Y H:i', strtotime($news->created_date));            $cat_id         = $news->cat_id;            $thumb          = $news->thumbnail;            $meta_title     = $news->meta_title;            $meta_keywords  = $news->meta_keywords;            $meta_description = $news->meta_description;            $tags           = $news->tags;            $lang           = $news->lang;            $startups       = $news->startups;        }        // khi submit        else        {            $id             = $id;            $title          = my_trim($this->input->post('title', TRUE));            if(SLUG_ACTIVE>0){                $slug = my_trim($this->input->post('slug', TRUE));            }            $summary        = my_trim($this->input->post('summary', TRUE));            $content        = '';            $created_date_input = datetimepicker_array2($this->input->post('created_date', TRUE));            $created_date   = date('Y-m-d H:i',mktime($created_date_input['hour'],$created_date_input['minute'],$created_date_input['second'],$created_date_input['month'],$created_date_input['day'],$created_date_input['year']));            $cat_id         = $this->input->post('categories_combobox');            $thumb          = $this->input->post('thumb');            $meta_title     = $this->input->post('meta_title', TRUE);            $meta_keywords  = $this->input->post('meta_keywords', TRUE);            $meta_description = $this->input->post('meta_description', TRUE);            $tags           = $this->input->post('tags', TRUE);            $lang           = $this->input->post('lang', TRUE);            $startups       = $this->input->post('startups', TRUE);        }        $options                  = array();        $options['id']            = $id;        $options['title']         = $title;        if(SLUG_ACTIVE>0){            $options['slug'] = $slug;        }        $options['summary']       = $summary;        $options['thumb']         = $thumb;        $options['content']       = $content;        $options['created_date']  = $created_date;        $options['meta_title']            = $meta_title;        $options['meta_keywords']         = $meta_keywords;        $options['meta_description']      = $meta_description;        $options['tags']                  = $tags;        $options['startups']              = $startups;        $options['lang_combobox'] = $this->utility_model->get_lang_combo(array('lang' => $lang, 'extra' => 'onchange="javascript:get_categories_by_lang();" class="btn"'));        $options['header']        = 'Sửa bài viết';        $options['button_name']   = 'Sửa bài viết';        $options['submit_uri']    = NEWS_ADMIN_BASE_URL.'/edit';        $options['categories_combobox']   = $this->news_categories_model->get_news_categories_combo(array('categories_combobox' => $cat_id, 'lang' => $lang, 'extra' => 'class="btn"'));        $options['scripts']               = $this->_get_scripts();        return $options;    }    /**     *  sửa trong DB nếu Validate OK     * @return type     */    private function _do_edit_news()    {        $this->form_validation->set_rules('title', 'Tiêu đề', 'trim|required|xss_clean|max_length[255]');        if(SLUG_ACTIVE>0){            $this->form_validation->set_rules('slug', 'Slug', 'trim|required|xss_clean|max_length[1000]');        }        $this->form_validation->set_rules('categories_combobox', 'Phân loại tin', 'is_not_default_combo');        $this->form_validation->set_rules('thumb', 'Hình minh họa', 'trim|required|xss_clean');        $this->form_validation->set_rules('summary', 'Tóm tắt', 'trim|required|xss_clean|max_length[512]');        $this->form_validation->set_rules('content', 'Nội dung', 'required');        $this->form_validation->set_rules('created_date', 'Ngày đăng tin', 'trim|required|xss_clean');        $this->form_validation->set_rules('meta_title', 'Meta title', 'trim|xss_clean|max_length[255]');        $this->form_validation->set_rules('meta_keywords', 'Meta keywords', 'trim|xss_clean|max_length[255]');        $this->form_validation->set_rules('meta_description', 'Meta description', 'trim|xss_clean');        $this->form_validation->set_rules('tags', 'Tags', 'trim|xss_clean');        if ($this->form_validation->run())        {            $post_data = $this->_get_posted_news_data();            $post_data['id'] = $this->input->post('id');            $position_edit = $this->news_model->position_to_edit_news(array('lang'=>$post_data['lang'],'id'=>$this->input->post('id')));            $post_data['position'] = $position_edit;            $this->news_model->update($post_data);            if(SLUG_ACTIVE>0){                $this->slug_model->update_slug(array('slug'=>  my_trim($this->input->post('slug', TRUE)).SLUG_CHARACTER_URL,'type'=>SLUG_TYPE_NEWS,'type_id'=>$post_data['id']));            }            redirect(NEWS_ADMIN_BASE_URL . '/' . $post_data['lang']);        }        return FALSE;    }    /**     * Xóa tin     */    public function delete()    {        $options = array();        if($this->is_postback())        {            $id = $this->input->post('id');            if(SLUG_ACTIVE>0){                $check_slug = $this->slug_model->get_slug(array('type_id'=>$id,'type'=>SLUG_TYPE_NEWS,'onehit'=>TRUE));                if(!empty($check_slug)){                    $this->slug_model->delete($check_slug->id);                }            }            $this->news_model->delete($id);            $options['warning'] = 'Đã xóa thành công';        }        $lang = $this->phpsession->get('news_lang');        redirect(NEWS_ADMIN_BASE_URL . '/' . $lang);    }    private function _get_scripts()    {        $scripts = '<script type="text/javascript" src="/plugins/tinymce/tinymce.min.js?v=4.1.7"></script>';        $scripts .= '<link rel="stylesheet" type="text/css" href="/plugins/fancybox/source/jquery.fancybox.css" media="screen" />';        $scripts .= '<script type="text/javascript" src="/plugins/fancybox/source/jquery.fancybox.pack.js"></script>';        $scripts .= '<script type="text/javascript">$(".iframe-btn").fancybox({"width":900,"height":500,"type":"iframe","autoScale":false});</script>';        $scripts .= '<style type=text/css>.fancybox-inner {height:500px !important;}</style>';        $scripts .= '<script type="text/javascript">enable_tiny_mce();</script>';        return $scripts;    }        function change_status()    {        $id = $this->input->post('id');        $news = $this->news_model->get_news(array('id' => $id));        $status = $news->status == STATUS_ACTIVE ? STATUS_INACTIVE : STATUS_ACTIVE;        $this->news_model->update(array('id'=>$id,'status'=>$status));    }        function change_home()    {        $id = $this->input->post('id');        $news = $this->news_model->get_news(array('id' => $id));        $home = $news->home == STATUS_ACTIVE ? STATUS_INACTIVE : STATUS_ACTIVE;        $this->news_model->update(array('id'=>$id,'home'=>$home));    }        function change_startups()    {        $id = $this->input->post('id');        $news = $this->news_model->get_news(array('id' => $id));        $startups = $news->startups == STATUS_ACTIVE ? STATUS_INACTIVE : STATUS_ACTIVE;        $this->news_model->update(array('id'=>$id,'startups'=>$startups));    }    public function up()    {        $id = $this->input->post('id');        $lang = $this->phpsession->get('news_lang');        $this->news_model->item_to_sort_news(array('id' => $id));        redirect(NEWS_ADMIN_BASE_URL . '/' . $lang);    }    }